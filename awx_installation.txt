---------------------------------------------------------------------------------
- Step1: Install DockerInstall Docker Engine on Ubuntu using the apt repository -
---------------------------------------------------------------------------------

# Add Docker's official GPG key:
$ sudo apt-get update
$ sudo apt-get install ca-certificates curl
$ sudo install -m 0755 -d /etc/apt/keyrings
$ sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
$ sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
$ echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

$ sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

$ sudo docker run hello-world


Linux post-installation steps for Docker Engine
-----------------------------------------------
Manage Docker as a non-root user:
---------------------------------

$ sudo groupadd docker
$ sudo usermod -aG docker $USER

>>>>Â REBOOT <<<<

$ newgrp docker
$ docker run hello-world


-----------------------------------
- Step2: Install Minikube & start -
-----------------------------------
To install the latest minikube stable release on x86-64 Linux using binary download:
------------------------------------------------------------------------------------

$ curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
$ sudo install minikube-linux-amd64 /usr/local/bin/minikube

$ minikube start --cpus=4 --memory=6g --addons=ingress
$ alias kubectl="minikube kubectl --"


-----------------------------------
- Step3:  Ansible AWX Operator    -
-----------------------------------

1 - After cloning this repository, you must choose the tag to run: 
------------------------------------------------------------------
git clone git@github.com:ansible/awx-operator.git
cd awx-operator
git tag
git checkout tags/<tag>
export VERSION=<tag>


2 - Deploy AWX Operator into your cluster using Kustomize:
----------------------------------------------------------
Install kubectl :
-----------------
$ curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
$ chmod +x ./kubectl
$ sudo mv ./kubectl /usr/local/bin/kubectl
$ sudo apt install make
$ make deploy

3 - Create kustomization.yaml file:
-----------------------------------
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
resources:
  # Find the latest tag here: https://github.com/ansible/awx-operator/releases
  - github.com/ansible/awx-operator/config/default?ref=<tag>

# Set the image tags to match the git version from above
images:
  - name: quay.io/ansible/awx-operator
    newTag: <tag>

# Specify a custom namespace in which to install AWX
namespace: awx

$ kubectl apply -k .
$ kubectl get pods -n awx
$ kubectl config set-context --current --namespace=awx

4 - Create awx-demo.yml file:
-----------------------------
---
apiVersion: awx.ansible.com/v1beta1
kind: AWX
metadata:
  name: awx-demo
spec:
  service_type: nodeport
  

5 - add this new file to the list of "resources" in your kustomization.yaml file :
----------------------------------------------------------------------------------
...
resources:
  - github.com/ansible/awx-operator/config/default?ref=<tag>
  # Add this extra line:
  - awx-demo.yml
...

$ kubectl apply -k .
$ kubectl logs -f deployments/awx-operator-controller-manager -c awx-manager

$ kubectl get pods -l "app.kubernetes.io/managed-by=awx-operator"
$ kubectl get svc -l "app.kubernetes.io/managed-by=awx-operator"

the AWX instance will be accessible by running:
-----------------------------------------------
$ minikube service -n awx awx-demo-service --url

6 - To retrieve the admin password, run:
----------------------------------------
$ kubectl get secret awx-demo-admin-password -o jsonpath="{.data.password}" | base64 --decode ; echo


----------------------------------
- Step 4 : Install Ansible 22.04 -
----------------------------------

$ sudo apt-add-repository ppa:ansible/ansible
$ sudo apt update
$ sudo apt install ansible

